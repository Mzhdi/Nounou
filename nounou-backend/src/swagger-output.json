{
  "swagger": "2.0",
  "info": {
    "title": "Nounou Nutrition API",
    "description": "A comprehensive nutrition tracking API with MongoDB backend supporting unified food and recipe consumption tracking.",
    "version": "2.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@nounou-nutrition.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Health",
      "description": "Health check and system status endpoints"
    },
    {
      "name": "Users",
      "description": "User management, authentication, and profile operations"
    },
    {
      "name": "Foods",
      "description": "Food database management and search functionality"
    },
    {
      "name": "Recipes",
      "description": "Recipe creation, management, and ingredient handling"
    },
    {
      "name": "Consumption",
      "description": "Unified food and recipe consumption tracking and analytics"
    },
    {
      "name": "Categories",
      "description": "Food and recipe category management"
    },
    {
      "name": "Analytics",
      "description": "Advanced nutrition analytics and reporting"
    },
    {
      "name": "Admin",
      "description": "Administrative operations and system management"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format: Bearer {token}"
    },
    "deviceAuth": {
      "type": "apiKey",
      "name": "X-Device-ID",
      "in": "header",
      "description": "Device identification for session management"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api-docs.json": {
      "get": {
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "X-App-Version",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Consumption service health check",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Service health status",
            "schema": {
              "$ref": "#/definitions/HealthCheck",
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "healthy"
                        }
                      }
                    },
                    "service": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "consumption-service-v2"
                        }
                      }
                    },
                    "version": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "2.0.0"
                        }
                      }
                    },
                    "features": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "unifiedItemSupport": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                },
                                "example": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "foodIntegration": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                },
                                "example": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "recipeIntegration": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                },
                                "example": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "503": {
            "description": "Server is unhealthy",
            "schema": {
              "type": "object",
              "properties": {
                "allOf": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "object"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipes with filtering",
        "description": "Retrieve recipes with optional filtering and pagination",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "is_public",
            "in": "query",
            "type": "string"
          },
          {
            "name": "diet_types",
            "in": "query",
            "type": "string"
          },
          {
            "name": "difficulty_level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "max_prep_time",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "my_recipes",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "description": "Items per page"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Filter by category"
          },
          {
            "name": "cuisine",
            "in": "query",
            "type": "string",
            "description": "Filter by cuisine"
          },
          {
            "name": "difficulty",
            "in": "query",
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ]
          },
          {
            "name": "maxTime",
            "in": "query",
            "type": "integer",
            "description": "Maximum total time in minutes"
          },
          {
            "name": "publicOnly",
            "in": "query",
            "type": "boolean",
            "default": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "enum": [
              "name",
              "rating",
              "createdAt",
              "totalTime"
            ]
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipes",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Nounou Nutrition API - MongoDB Version"
                        }
                      }
                    },
                    "version": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "2.0.0"
                        }
                      }
                    },
                    "environment": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "development"
                        }
                      }
                    },
                    "timestamp": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    },
                    "endpoints": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "health": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "/health"
                                }
                              }
                            },
                            "docs": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "/api-docs"
                                }
                              }
                            },
                            "users": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "/api/v1/users"
                                }
                              }
                            },
                            "foods": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "/api/v1/foods"
                                }
                              }
                            },
                            "recipes": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "/api/v1/recipes"
                                }
                              }
                            },
                            "consumption": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "example": {
                                  "type": "string",
                                  "example": "/api/v1/consumption"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    },
                    "filters": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "applied": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Currently applied filters"
                                }
                              }
                            },
                            "available": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "properties": {
                                  "type": "object",
                                  "properties": {
                                    "categories": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "array"
                                        },
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "brands": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "array"
                                        },
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "calorieRange": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "object"
                                        },
                                        "properties": {
                                          "type": "object",
                                          "properties": {
                                            "min": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "number"
                                                }
                                              }
                                            },
                                            "max": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "number"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "appliedFilters": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            },
                            "availableFilters": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create new recipe",
        "description": "Create a basic recipe (ingredients and instructions added separately)",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Chicken Stir Fry"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "A healthy chicken stir fry"
                        }
                      }
                    },
                    "categoryId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "64f7d1b2c8e5f1234567890g"
                        }
                      }
                    },
                    "cuisine": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Asian"
                        }
                      }
                    },
                    "difficulty": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "easy",
                            "medium",
                            "hard"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "type": "string",
                          "example": "medium"
                        }
                      }
                    },
                    "prepTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 15
                        }
                      }
                    },
                    "cookTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 20
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 4
                        }
                      }
                    },
                    "isPublic": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "example": {
                          "type": "array",
                          "example": [
                            "healthy",
                            "quick"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Recipe created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food created successfully"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Recipe"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Food with this name/barcode already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/docs": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/users/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user",
        "description": "Create a new user account with email and password",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Email already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/users/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login user",
        "description": "Authenticate user with email and password",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/users/refresh-token": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Refresh authentication tokens",
        "description": "Refresh access token using refresh token",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/users/forgot-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Request password reset",
        "description": "Send password reset email to user",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "email"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset email sent",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/users/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password with token",
        "description": "Reset user password using reset token",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "minLength": {
                          "type": "number",
                          "example": 8
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successful",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user profile",
        "description": "Get authenticated user profile information",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user profile",
        "description": "Update authenticated user profile information",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    },
                    "age": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 26
                        }
                      }
                    },
                    "height": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 176
                        }
                      }
                    },
                    "weight": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 72
                        }
                      }
                    },
                    "activityLevel": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "sedentary",
                            "light",
                            "moderate",
                            "active",
                            "very_active"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Profile updated successfully"
                        }
                      }
                    },
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/profile/history": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get profile modification history",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile history retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout user",
        "description": "Logout current user session",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/logout-all": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout from all devices",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out from all devices",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/verify-token": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Verify authentication token",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/change-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change user password",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "currentPassword": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "newPassword": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "minLength": {
                          "type": "number",
                          "example": 8
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/sessions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get active sessions",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Active sessions retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "sessions": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "deviceId": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "lastActive": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "format": {
                                      "type": "string",
                                      "example": "date-time"
                                    }
                                  }
                                },
                                "isCurrent": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/sessions/{sessionId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Revoke a specific session",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Session ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Session revoked",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/settings": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user settings",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User settings retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "units": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "enum": {
                                  "type": "array",
                                  "example": [
                                    "metric",
                                    "imperial"
                                  ],
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "language": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                }
                              }
                            },
                            "notifications": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                }
                              }
                            },
                            "privacy": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user settings",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "units": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "metric",
                            "imperial"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/goals": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user goals",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User goals retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "goals": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/UserGoal"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create or update a goal",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "calories",
                            "protein",
                            "weight"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "target": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "period": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "daily",
                            "weekly",
                            "monthly"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Goal created/updated",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "goal": {
                      "$ref": "#/definitions/UserGoal"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/goals/{goalId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a specific goal",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Goal ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserGoal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Goal updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a goal",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Goal ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Goal deleted",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/account": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deactivate user account",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "reason": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deactivated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/export": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Export user data (GDPR)",
        "description": "",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "enum": [
              "json",
              "csv"
            ],
            "default": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "User data exported",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/request-deletion": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Request complete data deletion (GDPR)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion request submitted",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/subscription": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get subscription info",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription info retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "free",
                            "premium",
                            "pro"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "expiresAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    },
                    "features": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/subscription/upgrade": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Upgrade subscription",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "plan": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "premium",
                            "pro"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription upgraded",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/subscription/cancel": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Cancel subscription",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription cancelled",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/insights": {
      "get": {
        "tags": [
          "Users",
          "Analytics"
        ],
        "summary": "Get personalized insights (Premium)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Personalized insights",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "insights": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        }
                      }
                    },
                    "recommendations": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Premium subscription required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/analytics": {
      "get": {
        "tags": [
          "Users",
          "Analytics"
        ],
        "summary": "Get advanced analytics (Pro)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Advanced analytics data",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Pro subscription required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/ai-coach": {
      "post": {
        "tags": [
          "Users",
          "Analytics"
        ],
        "summary": "Get AI nutritionist recommendations (Premium/Pro)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "question": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI coach recommendations",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "recommendation": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "confidence": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/admin/stats": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user statistics (Admin only)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User statistics",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/admin/search": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Search users (Admin only)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "subscriptionType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/User"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/users/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "User service health check",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Service is healthy",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "healthy"
                        }
                      }
                    },
                    "service": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "user-service"
                        }
                      }
                    },
                    "version": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "2.0.0"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/users/features": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get available features for current user",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available features",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "features": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    },
                    "subscription": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/entries": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create consumption entry (food OR recipe)",
        "description": "Create a unified consumption entry for either food or recipe",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsumptionEntryCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Consumption entry created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Consumption entry created"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/ConsumptionEntry"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Food or recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get consumption entries with advanced filtering",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "type": "string"
          },
          {
            "name": "entryMethod",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "description": "Items per page"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string",
            "enum": [
              "breakfast",
              "lunch",
              "dinner",
              "snack"
            ],
            "description": "Filter by meal type"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string",
            "enum": [
              "food",
              "recipe"
            ],
            "description": "Filter by item type"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Start date filter"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "End date filter"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string",
            "description": "Search in item names"
          },
          {
            "name": "minCalories",
            "in": "query",
            "type": "number",
            "description": "Minimum calories filter"
          },
          {
            "name": "maxCalories",
            "in": "query",
            "type": "number",
            "description": "Maximum calories filter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/ConsumptionEntry"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "totalCalories": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "totalEntries": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "itemTypes": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/entries/food": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create food consumption entry (shorthand)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "foodId",
                    "quantity",
                    "unit"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "foodId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "64f7d1b2c8e5f1234567890b"
                        }
                      }
                    },
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 150
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "g"
                        }
                      }
                    },
                    "mealType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "breakfast",
                            "lunch",
                            "dinner",
                            "snack"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mealName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Morning Snack"
                        }
                      }
                    },
                    "consumedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Food entry created",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/entries/recipe": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create recipe consumption entry (shorthand)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeConsumptionEntry"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Recipe entry created",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/meals/quick": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create quick meal with multiple items",
        "description": "Create a meal containing multiple foods and/or recipes",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuickMeal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Quick meal created",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entries": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "array"
                                },
                                "items": {
                                  "$ref": "#/definitions/ConsumptionEntry"
                                }
                              }
                            },
                            "totalNutrition": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/meals/from-recipe/{recipeId}": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create meal from recipe",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1.5
                        }
                      }
                    },
                    "mealType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "breakfast",
                            "lunch",
                            "dinner",
                            "snack"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Meal from recipe created",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/entries/foods": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get only food consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Food consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/ConsumptionEntry"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/entries/recipes": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get only recipe consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/ConsumptionEntry"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/entries/{entryId}": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get specific consumption entry",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Entry ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Consumption entry details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/ConsumptionEntry"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Entry not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Consumption"
        ],
        "summary": "Update consumption entry",
        "description": "Update a consumption entry with smart type-based handling",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "mealType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "breakfast",
                            "lunch",
                            "dinner",
                            "snack"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mealName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "consumedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry updated successfully",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Consumption"
        ],
        "summary": "Delete consumption entry",
        "description": "Soft delete a consumption entry",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "example": "any"
                },
                "hardDelete": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry deleted successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/search": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Search consumption entries",
        "description": "Search across both food and recipe consumption entries",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string",
            "enum": [
              "food",
              "recipe"
            ]
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/ConsumptionEntry"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/search/foods": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Search only food consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Food search results"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/search/recipes": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Search only recipe consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe search results"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/dashboard": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Unified nutrition dashboard",
        "description": "Get comprehensive nutrition dashboard with foods and recipes analytics",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeInsights",
            "in": "query",
            "type": "string"
          },
          {
            "name": "weekOffset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "monthOffset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string",
            "enum": [
              "today",
              "week",
              "month",
              "year"
            ],
            "default": "today",
            "description": "Time period for dashboard data"
          },
          {
            "name": "includeBreakdown",
            "in": "query",
            "type": "boolean",
            "description": "Include meal breakdown"
          },
          {
            "name": "includeGoals",
            "in": "query",
            "type": "boolean",
            "description": "Include goal comparison"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data",
            "schema": {
              "$ref": "#/definitions/DashboardData"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/dashboard/by-type": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Dashboard breakdown by item type",
        "description": "Get dashboard with food vs recipe breakdown",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeGoals",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeInsights",
            "in": "query",
            "type": "string"
          },
          {
            "name": "weekOffset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "monthOffset",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard breakdown by type",
            "schema": {
              "$ref": "#/definitions/DashboardData"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/stats/top-items": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Top consumed items (foods + recipes)",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 10,
            "description": "Number of top items"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year"
            ]
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string",
            "enum": [
              "food",
              "recipe"
            ]
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string",
            "enum": [
              "breakfast",
              "lunch",
              "dinner",
              "snack"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Top consumed items",
            "schema": {
              "$ref": "#/definitions/TopItems"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/stats/balance": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Nutrition balance analysis",
        "description": "Analyze nutrition balance between food and recipe sources",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year"
            ]
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Nutrition balance analysis",
            "schema": {
              "$ref": "#/definitions/NutritionBalance"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/entries/{entryId}/duplicate": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Duplicate consumption entry",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mealType": {
                  "example": "any"
                },
                "consumedAt": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "servings": {
                  "example": "any"
                },
                "notes": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Entry duplicated",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/suggestions/foods": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Get food suggestions based on history",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "timeOfDay",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string",
            "enum": [
              "breakfast",
              "lunch",
              "dinner",
              "snack"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 10
          },
          {
            "name": "basedOn",
            "in": "query",
            "type": "string",
            "enum": [
              "frequency",
              "nutrition",
              "time"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Food suggestions",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Food"
                        }
                      }
                    },
                    "reasoning": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Premium feature required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/suggestions/recipes": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Get recipe suggestions based on history",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "basedOn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "timeOfDay",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe suggestions",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/export/unified": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Export consumption data with details",
        "description": "",
        "produces": [
          "csv"
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "includeMetadata",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "enum": [
              "json",
              "csv"
            ],
            "default": "json"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeItemDetails",
            "in": "query",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Exported consumption data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Premium subscription required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/consumption/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Consumption service health check",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Service health status",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "healthy"
                        }
                      }
                    },
                    "service": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "consumption-service-v2"
                        }
                      }
                    },
                    "version": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "2.0.0"
                        }
                      }
                    },
                    "features": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "unifiedItemSupport": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                },
                                "example": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "foodIntegration": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                },
                                "example": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            },
                            "recipeIntegration": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                },
                                "example": {
                                  "type": "boolean",
                                  "example": true
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/stats/top-foods": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/stats/top-recipes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/entries/{entryId}/recalculate": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/recommendations/missing-nutrients": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "targetNutrients": {
                  "example": "any"
                },
                "period": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/validate/food-exists/{foodId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/validate/recipe-exists/{recipeId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/sync/nutrition": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "force": {
                  "example": "any"
                },
                "itemType": {
                  "example": "any"
                },
                "batchSize": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/reports/nutrition-sources": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/reports/recipe-usage": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/reports/food-vs-recipe": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/export/by-type": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeItemDetails",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeMetadata",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/batch/recalculate": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "entryIds": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/batch/convert-type": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "entryIds": {
                  "example": "any"
                },
                "fromType": {
                  "example": "any"
                },
                "toType": {
                  "example": "any"
                },
                "conversionData": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/migration/schema": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dryRun": {
                  "example": "any"
                },
                "batchSize": {
                  "example": "any"
                },
                "backupFirst": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/migration/status": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/maintenance/cleanup-orphaned": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "olderThan": {
                  "example": "any"
                },
                "includeOrphaned": {
                  "example": "any"
                },
                "dryRun": {
                  "example": "any"
                },
                "maxEntries": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/admin/stats/item-types": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeUserBreakdown",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/admin/stats/migration": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/consumption/metadata": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/foods/debug/{foodId}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Debug food lookup (Development only)",
        "description": "Debug endpoint to troubleshoot food ID lookup issues",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID to debug"
          }
        ],
        "responses": {
          "200": {
            "description": "Debug information",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "search_id": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                }
                              }
                            },
                            "found_by_food_id": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            },
                            "found_by_mongo_id": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            },
                            "all_foods": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "array"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/${API_VERSION}/foods/test": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Test food service connectivity",
        "description": "Test endpoint to verify food service and database connectivity",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Service test results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "categories_count": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "foods_count": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "database_connected": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/foods/search": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Search foods by text",
        "description": "Search for foods using text query with fuzzy matching",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "maximum": 50,
            "description": "Maximum number of results"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Filter by category"
          },
          {
            "name": "verified",
            "in": "query",
            "type": "boolean",
            "description": "Filter by verified foods only"
          },
          {
            "name": "minCalories",
            "in": "query",
            "type": "number",
            "description": "Minimum calories per 100g"
          },
          {
            "name": "maxCalories",
            "in": "query",
            "type": "number",
            "description": "Maximum calories per 100g"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "apple juice"
                        }
                      }
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "allOf": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "object"
                                  },
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "score": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "number"
                                          },
                                          "description": {
                                            "type": "string",
                                            "example": "Search relevance score"
                                          },
                                          "example": {
                                            "type": "number",
                                            "example": 0.95
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "searchTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Missing or invalid search query",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/${API_VERSION}/foods/barcode/{barcode}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Get food by barcode",
        "description": "Retrieve food information using product barcode",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product barcode (EAN, UPC, etc.)",
            "example": "1234567890123"
          }
        ],
        "responses": {
          "200": {
            "description": "Food found by barcode",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Food"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Food not found for this barcode",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food not found"
                        }
                      }
                    },
                    "barcode": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "suggestion": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Try manual search or add new food"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/${API_VERSION}/foods/categories/tree": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get food category tree",
        "description": "Retrieve the complete hierarchical tree of food categories",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeEmpty",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Include categories with no foods"
          },
          {
            "name": "maxDepth",
            "in": "query",
            "type": "integer",
            "default": 5,
            "description": "Maximum tree depth"
          }
        ],
        "responses": {
          "200": {
            "description": "Category tree structure",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "tree": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "allOf": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "object"
                                  },
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "children": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "array"
                                          },
                                          "description": {
                                            "type": "string",
                                            "example": "Child categories"
                                          }
                                        }
                                      },
                                      "foodCount": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "number"
                                          }
                                        }
                                      },
                                      "depth": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalCategories": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "maxDepth": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/${API_VERSION}/foods/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get food category by ID",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          },
          {
            "name": "includeFoods",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Include foods in this category"
          },
          {
            "name": "includeChildren",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Include child categories"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/FoodCategory"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Categories"
        ],
        "summary": "Update food category",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "parentId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "icon": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "color": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "isActive": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated",
            "schema": {
              "$ref": "#/definitions/FoodCategory"
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/foods/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get food categories",
        "description": "Retrieve food categories with optional filtering and pagination",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "include_inactive",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "description": "Items per page"
          },
          {
            "name": "level",
            "in": "query",
            "type": "integer",
            "description": "Filter by category level (0 = root)"
          },
          {
            "name": "parentId",
            "in": "query",
            "type": "string",
            "description": "Filter by parent category"
          },
          {
            "name": "includeStats",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Include food count statistics"
          }
        ],
        "responses": {
          "200": {
            "description": "List of food categories",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/FoodCategory"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create food category",
        "description": "Create a new food category (requires authentication)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Organic Fruits"
                        }
                      }
                    },
                    "slug": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "organic-fruits"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Certified organic fresh fruits"
                        }
                      }
                    },
                    "parentId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Parent category ID"
                        }
                      }
                    },
                    "icon": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "🍎"
                        }
                      }
                    },
                    "color": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "#FF6B6B"
                        }
                      }
                    },
                    "isActive": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "default": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/FoodCategory"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid category data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Category name already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/foods/": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Get all foods",
        "description": "Retrieve a list of foods with optional filtering and pagination",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "food_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "is_verified",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "maximum": 100,
            "description": "Items per page"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Filter by food category"
          },
          {
            "name": "brand",
            "in": "query",
            "type": "string",
            "description": "Filter by brand"
          },
          {
            "name": "verified",
            "in": "query",
            "type": "boolean",
            "description": "Filter by verified foods only"
          },
          {
            "name": "public",
            "in": "query",
            "type": "boolean",
            "default": true,
            "description": "Include public foods"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "enum": [
              "name",
              "calories",
              "createdAt",
              "updatedAt"
            ],
            "default": "name",
            "description": "Sort foods by field"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "asc",
            "description": "Sort order"
          },
          {
            "name": "minCalories",
            "in": "query",
            "type": "number",
            "description": "Minimum calories per 100g"
          },
          {
            "name": "maxCalories",
            "in": "query",
            "type": "number",
            "description": "Maximum calories per 100g"
          },
          {
            "name": "minProtein",
            "in": "query",
            "type": "number",
            "description": "Minimum protein per 100g"
          },
          {
            "name": "allergens",
            "in": "query",
            "type": "string",
            "description": "Exclude foods with these allergens (comma-separated)"
          }
        ],
        "responses": {
          "200": {
            "description": "List of foods",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Food"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    },
                    "filters": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "applied": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Currently applied filters"
                                }
                              }
                            },
                            "available": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "properties": {
                                  "type": "object",
                                  "properties": {
                                    "categories": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "array"
                                        },
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "brands": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "array"
                                        },
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "example": "string"
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "calorieRange": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "object"
                                        },
                                        "properties": {
                                          "type": "object",
                                          "properties": {
                                            "min": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "number"
                                                }
                                              }
                                            },
                                            "max": {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "example": "number"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Foods"
        ],
        "summary": "Create new food",
        "description": "Add a new food item to the database (requires authentication)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FoodCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Food created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food created successfully"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Food"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Food with this name/barcode already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/foods/{foodId}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Get food by ID",
        "description": "Retrieve a specific food item by its ID (supports both MongoDB _id and custom food_id)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID (MongoDB _id or custom food_id)",
            "example": "64f7d1b2c8e5f1234567890b"
          },
          {
            "name": "include_nutrition",
            "in": "query",
            "type": "string"
          },
          {
            "name": "include_images",
            "in": "query",
            "type": "string"
          },
          {
            "name": "include_allergens",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeCategory",
            "in": "query",
            "type": "boolean",
            "default": true,
            "description": "Include category details"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "boolean",
            "default": true,
            "description": "Include detailed nutrition data"
          }
        ],
        "responses": {
          "200": {
            "description": "Food details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Food"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Food not found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food not found"
                        }
                      }
                    },
                    "foodId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "suggestion": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Try searching for similar foods"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Foods"
        ],
        "summary": "Update food",
        "description": "Update a food item (requires authentication and ownership/admin rights)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "brand": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "barcode": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "categoryId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "nutritionPer100g": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "calories": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "protein": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "carbs": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "fat": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "fiber": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "sugar": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "sodium": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "allergens": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    },
                    "isPublic": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Food updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Food"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Not authorized to update this food",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Food not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Foods"
        ],
        "summary": "Delete food",
        "description": "Soft delete a food item (requires authentication and ownership/admin rights)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Force permanent deletion (admin only)"
          }
        ],
        "responses": {
          "200": {
            "description": "Food deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food deleted successfully"
                        }
                      }
                    },
                    "deletedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Not authorized to delete this food",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Food not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Cannot delete food that is being used in consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food is currently being used"
                        }
                      }
                    },
                    "usageCount": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "suggestion": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Archive the food instead of deleting"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/search": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Search recipes by text",
        "description": "Search for recipes using text query with fuzzy matching",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "description": "Maximum results"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Filter by category"
          },
          {
            "name": "cuisine",
            "in": "query",
            "type": "string",
            "description": "Filter by cuisine"
          },
          {
            "name": "difficulty",
            "in": "query",
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ]
          },
          {
            "name": "maxTime",
            "in": "query",
            "type": "integer",
            "description": "Maximum total time in minutes"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "total": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/public": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get public recipes",
        "description": "Retrieve publicly available recipes",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20
          },
          {
            "name": "category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "cuisine",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "enum": [
              "name",
              "rating",
              "createdAt",
              "totalTime"
            ],
            "default": "createdAt"
          }
        ],
        "responses": {
          "200": {
            "description": "List of public recipes",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/my-recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get user\\'s recipes",
        "description": "Retrieve recipes created by the authenticated user",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "includePrivate",
            "in": "query",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "User's recipes",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/complete": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create complete recipe in one request",
        "description": "Create a complete recipe with ingredients and instructions in a single request",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Complete recipe created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Recipe"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/categories/search": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Search recipe categories",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          }
        ],
        "responses": {
          "200": {
            "description": "Category search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/RecipeCategory"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories/stats": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all category statistics",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category statistics",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "totalCategories": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "categoriesWithRecipes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "avgRecipesPerCategory": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories/roots": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get root categories",
        "description": "Get top-level categories (no parent)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Root categories",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/RecipeCategory"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories/level/{level}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "level",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get recipe categories",
        "description": "Retrieve recipe categories with optional hierarchy",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "parent_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tree",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "includeHierarchy",
            "in": "query",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipe categories",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/RecipeCategory"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create recipe category",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Desserts"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Sweet dessert recipes"
                        }
                      }
                    },
                    "parentId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Parent category ID"
                        }
                      }
                    },
                    "icon": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "🍰"
                        }
                      }
                    },
                    "color": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "#FF69B4"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": {
              "$ref": "#/definitions/RecipeCategory"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/categories/slug/{slug}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_children",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by ID",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          },
          {
            "name": "include_children",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "$ref": "#/definitions/RecipeCategory"
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories/{categoryId}/breadcrumb": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories/{categoryId}/stats": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/categories/{parent_id}/reorder": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category_orders": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipes with filtering",
        "description": "Retrieve recipes with optional filtering and pagination",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "category_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "is_public",
            "in": "query",
            "type": "string"
          },
          {
            "name": "diet_types",
            "in": "query",
            "type": "string"
          },
          {
            "name": "difficulty_level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "max_prep_time",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "my_recipes",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "description": "Items per page"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Filter by category"
          },
          {
            "name": "cuisine",
            "in": "query",
            "type": "string",
            "description": "Filter by cuisine"
          },
          {
            "name": "difficulty",
            "in": "query",
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ]
          },
          {
            "name": "maxTime",
            "in": "query",
            "type": "integer",
            "description": "Maximum total time in minutes"
          },
          {
            "name": "publicOnly",
            "in": "query",
            "type": "boolean",
            "default": true
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "enum": [
              "name",
              "rating",
              "createdAt",
              "totalTime"
            ]
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "default": "desc"
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipes",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    },
                    "filters": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "appliedFilters": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            },
                            "availableFilters": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create new recipe",
        "description": "Create a basic recipe (ingredients and instructions added separately)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Chicken Stir Fry"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "A healthy chicken stir fry"
                        }
                      }
                    },
                    "categoryId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "64f7d1b2c8e5f1234567890g"
                        }
                      }
                    },
                    "cuisine": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Asian"
                        }
                      }
                    },
                    "difficulty": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "easy",
                            "medium",
                            "hard"
                          ],
                          "items": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "type": "string",
                          "example": "medium"
                        }
                      }
                    },
                    "prepTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 15
                        }
                      }
                    },
                    "cookTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 20
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 4
                        }
                      }
                    },
                    "isPublic": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        },
                        "example": {
                          "type": "array",
                          "example": [
                            "healthy",
                            "quick"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Recipe created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Recipe"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/{recipeId}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe by ID",
        "description": "Retrieve a specific recipe with all details including ingredients and instructions",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "include_details",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeAuthor",
            "in": "query",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Recipe"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update recipe",
        "description": "Update recipe details (ingredients and instructions updated separately)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "categoryId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "cuisine": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "difficulty": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "easy",
                            "medium",
                            "hard"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "prepTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "cookTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "isPublic": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe updated successfully",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "403": {
            "description": "Not authorized to update this recipe",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete recipe",
        "description": "Soft delete a recipe (only recipe owner or admin)",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "403": {
            "description": "Not authorized to delete this recipe",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/{recipeId}/nutrition": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe nutrition information",
        "description": "Calculate and return detailed nutrition information for a recipe",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "per_serving",
            "in": "query",
            "type": "string"
          },
          {
            "name": "servings",
            "in": "query",
            "type": "number",
            "description": "Custom serving size for calculation"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe nutrition data",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "recipeId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "nutrition": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "perServing": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "properties": {
                                  "type": "object",
                                  "properties": {
                                    "calories": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "protein": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "carbs": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "fat": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "fiber": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "sugar": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "total": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "properties": {
                                  "type": "object",
                                  "properties": {
                                    "calories": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "protein": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "carbs": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "fat": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/api/${API_VERSION}/recipes/{recipeId}/ingredients": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe ingredients",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe ingredients",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "ingredients": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "foodId": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "food": {
                                  "$ref": "#/definitions/Food"
                                },
                                "quantity": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "number"
                                    }
                                  }
                                },
                                "unit": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "notes": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "order": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Add ingredient to recipe",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "foodId",
                    "quantity",
                    "unit"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "foodId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "64f7d1b2c8e5f1234567890b"
                        }
                      }
                    },
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 200
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "g"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "diced"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ingredient added to recipe",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "ingredient": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ingredient data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Recipe or food not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/ingredients/{ingredientId}": {
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update recipe ingredient",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ingredientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Ingredient ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Remove ingredient from recipe",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "ingredientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Ingredient ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient removed",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/{recipeId}/instructions": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Add instruction to recipe",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "step",
                    "instruction"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "step": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    },
                    "instruction": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Heat oil in a large pan over medium-high heat"
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 2
                        },
                        "description": {
                          "type": "string",
                          "example": "Duration in minutes"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instruction added to recipe",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "instruction": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/${API_VERSION}/recipes/instructions/{instructionId}": {
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update recipe instruction",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instructionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Instruction ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "step": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "instruction": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Instruction updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Remove instruction from recipe",
        "description": "",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "instructionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Instruction ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Instruction removed",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Register a new user",
        "description": "Create a new user account with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Email already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Login user",
        "description": "Authenticate user with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Refresh authentication tokens",
        "description": "Refresh access token using refresh token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "refreshToken": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            }
          }
        }
      }
    },
    "/forgot-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Request password reset",
        "description": "Send password reset email to user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "email"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reset email sent",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/reset-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password with token",
        "description": "Reset user password using reset token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "minLength": {
                          "type": "number",
                          "example": 8
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password reset successful",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user profile",
        "description": "Get authenticated user profile information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user profile",
        "description": "Update authenticated user profile information",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "John Doe"
                        }
                      }
                    },
                    "age": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 26
                        }
                      }
                    },
                    "height": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 176
                        }
                      }
                    },
                    "weight": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 72
                        }
                      }
                    },
                    "activityLevel": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "sedentary",
                            "light",
                            "moderate",
                            "active",
                            "very_active"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Profile updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Profile updated successfully"
                        }
                      }
                    },
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/profile/history": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get profile modification history",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Profile history retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout user",
        "description": "Logout current user session",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/logout-all": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Logout from all devices",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out from all devices",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/verify-token": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Verify authentication token",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "valid": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "user": {
                      "$ref": "#/definitions/User"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/change-password": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Change user password",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "currentPassword": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "newPassword": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "minLength": {
                          "type": "number",
                          "example": 8
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get active sessions",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Active sessions retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "sessions": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "deviceId": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "lastActive": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    },
                                    "format": {
                                      "type": "string",
                                      "example": "date-time"
                                    }
                                  }
                                },
                                "isCurrent": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sessions/{sessionId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Revoke a specific session",
        "description": "",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Session ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Session revoked",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user settings",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User settings retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "settings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "units": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                },
                                "enum": {
                                  "type": "array",
                                  "example": [
                                    "metric",
                                    "imperial"
                                  ],
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "language": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                }
                              }
                            },
                            "notifications": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                }
                              }
                            },
                            "privacy": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user settings",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "units": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "metric",
                            "imperial"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "language": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "notifications": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Settings updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/goals": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user goals",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User goals retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "goals": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/UserGoal"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create or update a goal",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "calories",
                            "protein",
                            "weight"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "target": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "period": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "daily",
                            "weekly",
                            "monthly"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Goal created/updated",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "goal": {
                      "$ref": "#/definitions/UserGoal"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/goals/{goalId}": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update a specific goal",
        "description": "",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Goal ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserGoal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Goal updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete a goal",
        "description": "",
        "parameters": [
          {
            "name": "goalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Goal ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Goal deleted",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/account": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Deactivate user account",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "password": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "reason": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account deactivated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/export": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Export user data (GDPR)",
        "description": "",
        "produces": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "enum": [
              "json",
              "csv"
            ],
            "default": "json"
          }
        ],
        "responses": {
          "200": {
            "description": "User data exported",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/request-deletion": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Request complete data deletion (GDPR)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Deletion request submitted",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/subscription": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get subscription info",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription info retrieved",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "free",
                            "premium",
                            "pro"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "expiresAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    },
                    "features": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/subscription/upgrade": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Upgrade subscription",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "plan": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "premium",
                            "pro"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "paymentMethod": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription upgraded",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/subscription/cancel": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Cancel subscription",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription cancelled",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/insights": {
      "get": {
        "tags": [
          "Users",
          "Analytics"
        ],
        "summary": "Get personalized insights (Premium)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Personalized insights",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "insights": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            }
                          }
                        }
                      }
                    },
                    "recommendations": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Premium subscription required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/analytics": {
      "get": {
        "tags": [
          "Users",
          "Analytics"
        ],
        "summary": "Get advanced analytics (Pro)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Advanced analytics data",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Pro subscription required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ai-coach": {
      "post": {
        "tags": [
          "Users",
          "Analytics"
        ],
        "summary": "Get AI nutritionist recommendations (Premium/Pro)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "question": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "context": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "AI coach recommendations",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "recommendation": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "confidence": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/stats": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get user statistics (Admin only)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User statistics",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Admin access required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/search": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Search users (Admin only)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "subscriptionType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "users": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/User"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/features": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get available features for current user",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Available features",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "features": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    },
                    "subscription": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/debug/{foodId}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Debug food lookup (Development only)",
        "description": "Debug endpoint to troubleshoot food ID lookup issues",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID to debug"
          }
        ],
        "responses": {
          "200": {
            "description": "Debug information",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "search_id": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "string"
                                }
                              }
                            },
                            "found_by_food_id": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            },
                            "found_by_mongo_id": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            },
                            "all_foods": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "array"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/test": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Test food service connectivity",
        "description": "Test endpoint to verify food service and database connectivity",
        "responses": {
          "200": {
            "description": "Service test results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "categories_count": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "foods_count": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "database_connected": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "boolean"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Service error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Search recipes by text",
        "description": "Search for recipes using text query with fuzzy matching",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "description": "Maximum results"
          },
          {
            "name": "category",
            "in": "query",
            "type": "string",
            "description": "Filter by category"
          },
          {
            "name": "cuisine",
            "in": "query",
            "type": "string",
            "description": "Filter by cuisine"
          },
          {
            "name": "difficulty",
            "in": "query",
            "type": "string",
            "enum": [
              "easy",
              "medium",
              "hard"
            ]
          },
          {
            "name": "maxTime",
            "in": "query",
            "type": "integer",
            "description": "Maximum total time in minutes"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "query": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "apple juice"
                        }
                      }
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "allOf": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "object"
                                  },
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "score": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "number"
                                          },
                                          "description": {
                                            "type": "string",
                                            "example": "Search relevance score"
                                          },
                                          "example": {
                                            "type": "number",
                                            "example": 0.95
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "total": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "searchTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Missing or invalid search query",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/barcode/{barcode}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Get food by barcode",
        "description": "Retrieve food information using product barcode",
        "parameters": [
          {
            "name": "barcode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product barcode (EAN, UPC, etc.)",
            "example": "1234567890123"
          }
        ],
        "responses": {
          "200": {
            "description": "Food found by barcode",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Food"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Food not found for this barcode",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food not found"
                        }
                      }
                    },
                    "barcode": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "suggestion": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Try manual search or add new food"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/tree": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get food category tree",
        "description": "Retrieve the complete hierarchical tree of food categories",
        "parameters": [
          {
            "name": "includeEmpty",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Include categories with no foods"
          },
          {
            "name": "maxDepth",
            "in": "query",
            "type": "integer",
            "default": 5,
            "description": "Maximum tree depth"
          }
        ],
        "responses": {
          "200": {
            "description": "Category tree structure",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "tree": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "allOf": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "example": "object"
                                  },
                                  "properties": {
                                    "type": "object",
                                    "properties": {
                                      "children": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "array"
                                          },
                                          "description": {
                                            "type": "string",
                                            "example": "Child categories"
                                          }
                                        }
                                      },
                                      "foodCount": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "number"
                                          }
                                        }
                                      },
                                      "depth": {
                                        "type": "object",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "example": "number"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalCategories": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "maxDepth": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/categories/{categoryId}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get category by ID",
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category ID"
          },
          {
            "name": "include_children",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/FoodCategory"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              },
              "$ref": "#/definitions/RecipeCategory"
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Category updated",
            "schema": {
              "$ref": "#/definitions/FoodCategory"
            }
          },
          "404": {
            "description": "Category not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "default": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get recipe categories",
        "description": "Retrieve recipe categories with optional hierarchy",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "parent_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tree",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "includeHierarchy",
            "in": "query",
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "List of recipe categories",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/RecipeCategory"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Categories"
        ],
        "summary": "Create recipe category",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "name"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Desserts"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Sweet dessert recipes"
                        }
                      }
                    },
                    "parentId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "description": {
                          "type": "string",
                          "example": "Parent category ID"
                        }
                      }
                    },
                    "icon": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "🍰"
                        }
                      }
                    },
                    "color": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "#FF69B4"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Category created",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/FoodCategory"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              },
              "$ref": "#/definitions/RecipeCategory"
            }
          },
          "400": {
            "description": "Invalid category data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Category name already exists",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/{foodId}": {
      "get": {
        "tags": [
          "Foods"
        ],
        "summary": "Get food by ID",
        "description": "Retrieve a specific food item by its ID (supports both MongoDB _id and custom food_id)",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID (MongoDB _id or custom food_id)",
            "example": "64f7d1b2c8e5f1234567890b"
          },
          {
            "name": "include_nutrition",
            "in": "query",
            "type": "string"
          },
          {
            "name": "include_images",
            "in": "query",
            "type": "string"
          },
          {
            "name": "include_allergens",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeCategory",
            "in": "query",
            "type": "boolean",
            "default": true,
            "description": "Include category details"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "boolean",
            "default": true,
            "description": "Include detailed nutrition data"
          }
        ],
        "responses": {
          "200": {
            "description": "Food details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Food"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Food not found",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food not found"
                        }
                      }
                    },
                    "foodId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "suggestion": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Try searching for similar foods"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Foods"
        ],
        "summary": "Update food",
        "description": "Update a food item (requires authentication and ownership/admin rights)",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "brand": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "barcode": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "categoryId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "nutritionPer100g": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "calories": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "protein": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "carbs": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "fat": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "fiber": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "sugar": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "sodium": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "allergens": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    },
                    "isPublic": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Food updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Food"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Not authorized to update this food",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Food not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Foods"
        ],
        "summary": "Delete food",
        "description": "Soft delete a food item (requires authentication and ownership/admin rights)",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Food ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "type": "boolean",
            "default": false,
            "description": "Force permanent deletion (admin only)"
          }
        ],
        "responses": {
          "200": {
            "description": "Food deleted successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food deleted successfully"
                        }
                      }
                    },
                    "deletedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Not authorized to delete this food",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Food not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Cannot delete food that is being used in consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    },
                    "error": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Food is currently being used"
                        }
                      }
                    },
                    "usageCount": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "suggestion": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Archive the food instead of deleting"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/entries": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create consumption entry (food OR recipe)",
        "description": "Create a unified consumption entry for either food or recipe",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConsumptionEntryCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Consumption entry created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        },
                        "example": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Consumption entry created"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/ConsumptionEntry"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Food or recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get consumption entries with advanced filtering",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "type": "string"
          },
          {
            "name": "entryMethod",
            "in": "query",
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1,
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20,
            "description": "Items per page"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string",
            "enum": [
              "breakfast",
              "lunch",
              "dinner",
              "snack"
            ],
            "description": "Filter by meal type"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string",
            "enum": [
              "food",
              "recipe"
            ],
            "description": "Filter by item type"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "Start date filter"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string",
            "format": "date",
            "description": "End date filter"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string",
            "description": "Search in item names"
          },
          {
            "name": "minCalories",
            "in": "query",
            "type": "number",
            "description": "Minimum calories filter"
          },
          {
            "name": "maxCalories",
            "in": "query",
            "type": "number",
            "description": "Maximum calories filter"
          }
        ],
        "responses": {
          "200": {
            "description": "List of consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/ConsumptionEntry"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    },
                    "summary": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "totalCalories": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "totalEntries": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "number"
                                }
                              }
                            },
                            "itemTypes": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/entries/food": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create food consumption entry (shorthand)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "foodId",
                    "quantity",
                    "unit"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "foodId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "64f7d1b2c8e5f1234567890b"
                        }
                      }
                    },
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 150
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "g"
                        }
                      }
                    },
                    "mealType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "breakfast",
                            "lunch",
                            "dinner",
                            "snack"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mealName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Morning Snack"
                        }
                      }
                    },
                    "consumedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Food entry created",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/entries/recipe": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create recipe consumption entry (shorthand)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeConsumptionEntry"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Recipe entry created",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/meals/quick": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create quick meal with multiple items",
        "description": "Create a meal containing multiple foods and/or recipes",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QuickMeal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Quick meal created",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "entries": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "array"
                                },
                                "items": {
                                  "$ref": "#/definitions/ConsumptionEntry"
                                }
                              }
                            },
                            "totalNutrition": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/meals/from-recipe/{recipeId}": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Create meal from recipe",
        "description": "",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1.5
                        }
                      }
                    },
                    "mealType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "breakfast",
                            "lunch",
                            "dinner",
                            "snack"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Meal from recipe created",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/entries/foods": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get only food consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Food consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/ConsumptionEntry"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/entries/recipes": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get only recipe consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe consumption entries",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/ConsumptionEntry"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/entries/{entryId}": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Get specific consumption entry",
        "description": "",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Entry ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Consumption entry details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/ConsumptionEntry"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Entry not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Consumption"
        ],
        "summary": "Update consumption entry",
        "description": "Update a consumption entry with smart type-based handling",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "mealType": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "breakfast",
                            "lunch",
                            "dinner",
                            "snack"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "mealName": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "consumedAt": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "format": {
                          "type": "string",
                          "example": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry updated successfully",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Consumption"
        ],
        "summary": "Delete consumption entry",
        "description": "Soft delete a consumption entry",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "reason": {
                  "example": "any"
                },
                "hardDelete": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Entry deleted successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/search/foods": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Search only food consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Food search results"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/search/recipes": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Search only recipe consumption entries",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe search results"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dashboard": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Unified nutrition dashboard",
        "description": "Get comprehensive nutrition dashboard with foods and recipes analytics",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeInsights",
            "in": "query",
            "type": "string"
          },
          {
            "name": "weekOffset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "monthOffset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string",
            "enum": [
              "today",
              "week",
              "month",
              "year"
            ],
            "default": "today",
            "description": "Time period for dashboard data"
          },
          {
            "name": "includeBreakdown",
            "in": "query",
            "type": "boolean",
            "description": "Include meal breakdown"
          },
          {
            "name": "includeGoals",
            "in": "query",
            "type": "boolean",
            "description": "Include goal comparison"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard data",
            "schema": {
              "$ref": "#/definitions/DashboardData"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dashboard/by-type": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Dashboard breakdown by item type",
        "description": "Get dashboard with food vs recipe breakdown",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeGoals",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeInsights",
            "in": "query",
            "type": "string"
          },
          {
            "name": "weekOffset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "monthOffset",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Dashboard breakdown by type",
            "schema": {
              "$ref": "#/definitions/DashboardData"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/stats/top-items": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Top consumed items (foods + recipes)",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 10,
            "description": "Number of top items"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year"
            ]
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string",
            "enum": [
              "food",
              "recipe"
            ]
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string",
            "enum": [
              "breakfast",
              "lunch",
              "dinner",
              "snack"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Top consumed items",
            "schema": {
              "$ref": "#/definitions/TopItems"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/stats/balance": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Nutrition balance analysis",
        "description": "Analyze nutrition balance between food and recipe sources",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string",
            "enum": [
              "week",
              "month",
              "year"
            ]
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Nutrition balance analysis",
            "schema": {
              "$ref": "#/definitions/NutritionBalance"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/entries/{entryId}/duplicate": {
      "post": {
        "tags": [
          "Consumption"
        ],
        "summary": "Duplicate consumption entry",
        "description": "",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "mealType": {
                  "example": "any"
                },
                "consumedAt": {
                  "example": "any"
                },
                "quantity": {
                  "example": "any"
                },
                "servings": {
                  "example": "any"
                },
                "notes": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Entry duplicated",
            "schema": {
              "$ref": "#/definitions/ConsumptionEntry"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/suggestions/foods": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Get food suggestions based on history",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "timeOfDay",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string",
            "enum": [
              "breakfast",
              "lunch",
              "dinner",
              "snack"
            ]
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 10
          },
          {
            "name": "basedOn",
            "in": "query",
            "type": "string",
            "enum": [
              "frequency",
              "nutrition",
              "time"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Food suggestions",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Food"
                        }
                      }
                    },
                    "reasoning": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "403": {
            "description": "Premium feature required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/suggestions/recipes": {
      "get": {
        "tags": [
          "Consumption",
          "Analytics"
        ],
        "summary": "Get recipe suggestions based on history",
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "basedOn",
            "in": "query",
            "type": "string"
          },
          {
            "name": "timeOfDay",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe suggestions",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "suggestions": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/export/unified": {
      "get": {
        "tags": [
          "Consumption"
        ],
        "summary": "Export consumption data with details",
        "description": "",
        "produces": [
          "csv"
        ],
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "includeMetadata",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string",
            "enum": [
              "json",
              "csv"
            ],
            "default": "json"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string",
            "format": "date"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeItemDetails",
            "in": "query",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Exported consumption data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "text/csv": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Premium subscription required"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/stats/top-foods": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/stats/top-recipes": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "itemType",
            "in": "query",
            "type": "string"
          },
          {
            "name": "mealType",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/entries/{entryId}/recalculate": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "entryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/recommendations/missing-nutrients": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "targetNutrients": {
                  "example": "any"
                },
                "period": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/validate/food-exists/{foodId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "foodId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/validate/recipe-exists/{recipeId}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/sync/nutrition": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "force": {
                  "example": "any"
                },
                "itemType": {
                  "example": "any"
                },
                "batchSize": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/reports/nutrition-sources": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/reports/recipe-usage": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/reports/food-vs-recipe": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeComparison",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/export/by-type": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "format",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeItemDetails",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeMetadata",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/batch/recalculate": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "entryIds": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/batch/convert-type": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "entryIds": {
                  "example": "any"
                },
                "fromType": {
                  "example": "any"
                },
                "toType": {
                  "example": "any"
                },
                "conversionData": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/migration/schema": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "dryRun": {
                  "example": "any"
                },
                "batchSize": {
                  "example": "any"
                },
                "backupFirst": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/migration/status": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/maintenance/cleanup-orphaned": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "olderThan": {
                  "example": "any"
                },
                "includeOrphaned": {
                  "example": "any"
                },
                "dryRun": {
                  "example": "any"
                },
                "maxEntries": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/admin/stats/item-types": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "type": "string"
          },
          {
            "name": "period",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeUserBreakdown",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/admin/stats/migration": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/metadata": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/public": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get public recipes",
        "description": "Retrieve publicly available recipes",
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "default": 20
          },
          {
            "name": "category",
            "in": "query",
            "type": "string"
          },
          {
            "name": "cuisine",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sortBy",
            "in": "query",
            "type": "string",
            "enum": [
              "name",
              "rating",
              "createdAt",
              "totalTime"
            ],
            "default": "createdAt"
          }
        ],
        "responses": {
          "200": {
            "description": "List of public recipes",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/my-recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get user\\'s recipes",
        "description": "Retrieve recipes created by the authenticated user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sort_order",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "includePrivate",
            "in": "query",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "User's recipes",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/Recipe"
                        }
                      }
                    },
                    "pagination": {
                      "$ref": "#/definitions/Pagination"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/complete": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create complete recipe in one request",
        "description": "Create a complete recipe with ingredients and instructions in a single request",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RecipeCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Complete recipe created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Recipe"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Authentication required",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories/search": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Search recipe categories",
        "description": "",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Search query"
          }
        ],
        "responses": {
          "200": {
            "description": "Category search results",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "results": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/RecipeCategory"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/categories/stats": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all category statistics",
        "description": "",
        "responses": {
          "200": {
            "description": "Category statistics",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "totalCategories": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "categoriesWithRecipes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "avgRecipesPerCategory": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/categories/roots": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get root categories",
        "description": "Get top-level categories (no parent)",
        "responses": {
          "200": {
            "description": "Root categories",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "$ref": "#/definitions/RecipeCategory"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      }
    },
    "/categories/level/{level}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "level",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/categories/slug/{slug}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_children",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/categories/{categoryId}/breadcrumb": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/categories/{categoryId}/stats": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/categories/{parent_id}/reorder": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "parent_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "category_orders": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/{recipeId}": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe by ID",
        "description": "Retrieve a specific recipe with all details including ingredients and instructions",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "include_details",
            "in": "query",
            "type": "string"
          },
          {
            "name": "includeNutrition",
            "in": "query",
            "type": "boolean",
            "default": true
          },
          {
            "name": "includeAuthor",
            "in": "query",
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe details",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "data": {
                      "$ref": "#/definitions/Recipe"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update recipe",
        "description": "Update recipe details (ingredients and instructions updated separately)",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "description": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "categoryId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "cuisine": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "difficulty": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "enum": {
                          "type": "array",
                          "example": [
                            "easy",
                            "medium",
                            "hard"
                          ],
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "prepTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "cookTime": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "isPublic": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "tags": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe updated successfully",
            "schema": {
              "$ref": "#/definitions/Recipe"
            }
          },
          "403": {
            "description": "Not authorized to update this recipe",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete recipe",
        "description": "Soft delete a recipe (only recipe owner or admin)",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted successfully",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "403": {
            "description": "Not authorized to delete this recipe",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/{recipeId}/nutrition": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe nutrition information",
        "description": "Calculate and return detailed nutrition information for a recipe",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "per_serving",
            "in": "query",
            "type": "string"
          },
          {
            "name": "servings",
            "in": "query",
            "type": "number",
            "description": "Custom serving size for calculation"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe nutrition data",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "recipeId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "servings": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "nutrition": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        },
                        "properties": {
                          "type": "object",
                          "properties": {
                            "perServing": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "properties": {
                                  "type": "object",
                                  "properties": {
                                    "calories": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "protein": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "carbs": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "fat": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "fiber": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "sugar": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "total": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "object"
                                },
                                "properties": {
                                  "type": "object",
                                  "properties": {
                                    "calories": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "protein": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "carbs": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    },
                                    "fat": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "example": "number"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "404": {
            "description": "Recipe not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/{recipeId}/ingredients": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe ingredients",
        "description": "",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe ingredients",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "ingredients": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "array"
                        },
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "example": "object"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "foodId": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "food": {
                                  "$ref": "#/definitions/Food"
                                },
                                "quantity": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "number"
                                    }
                                  }
                                },
                                "unit": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "notes": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "string"
                                    }
                                  }
                                },
                                "order": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "example": "number"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Add ingredient to recipe",
        "description": "",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "foodId",
                    "quantity",
                    "unit"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "foodId": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "64f7d1b2c8e5f1234567890b"
                        }
                      }
                    },
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 200
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "g"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "diced"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ingredient added to recipe",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "ingredient": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "400": {
            "description": "Invalid ingredient data",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Recipe or food not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/ingredients/{ingredientId}": {
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update recipe ingredient",
        "description": "",
        "parameters": [
          {
            "name": "ingredientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Ingredient ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "quantity": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "unit": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "notes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Remove ingredient from recipe",
        "description": "",
        "parameters": [
          {
            "name": "ingredientId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Ingredient ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Ingredient removed",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/{recipeId}/instructions": {
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Add instruction to recipe",
        "description": "",
        "parameters": [
          {
            "name": "recipeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Recipe ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "required": {
                  "type": "array",
                  "example": [
                    "step",
                    "instruction"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "step": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    },
                    "instruction": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        },
                        "example": {
                          "type": "string",
                          "example": "Heat oil in a large pan over medium-high heat"
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 2
                        },
                        "description": {
                          "type": "string",
                          "example": "Duration in minutes"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        },
                        "example": {
                          "type": "number",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Instruction added to recipe",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    },
                    "message": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "instruction": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "object"
                        }
                      }
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/instructions/{instructionId}": {
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "Update recipe instruction",
        "description": "",
        "parameters": [
          {
            "name": "instructionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Instruction ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "step": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "instruction": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "duration": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    },
                    "order": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Instruction updated",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Remove instruction from recipe",
        "description": "",
        "parameters": [
          {
            "name": "instructionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Instruction ID"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Instruction removed",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890a"
        },
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "age": {
          "type": "number",
          "example": 25
        },
        "gender": {
          "type": "string",
          "example": "male"
        },
        "height": {
          "type": "number",
          "example": 175
        },
        "weight": {
          "type": "number",
          "example": 70
        },
        "activityLevel": {
          "type": "string",
          "example": "moderate"
        },
        "subscriptionType": {
          "type": "string",
          "example": "free"
        },
        "preferences": {
          "type": "object",
          "properties": {
            "units": {
              "type": "string",
              "example": "metric"
            },
            "language": {
              "type": "string",
              "example": "en"
            },
            "notifications": {
              "type": "boolean",
              "example": true
            }
          }
        },
        "createdAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "UserRegistration": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "password": {
          "type": "string",
          "example": "securePassword123"
        },
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "age": {
          "type": "number",
          "example": 25
        },
        "gender": {
          "type": "string",
          "example": "male"
        },
        "height": {
          "type": "number",
          "example": 175
        },
        "weight": {
          "type": "number",
          "example": 70
        },
        "activityLevel": {
          "type": "string",
          "example": "moderate"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "user@example.com"
        },
        "password": {
          "type": "string",
          "example": "securePassword123"
        },
        "deviceId": {
          "type": "string",
          "example": "optional-device-id"
        }
      }
    },
    "AuthResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "Login successful"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        },
        "user": {
          "type": "string",
          "example": "$ref:User"
        },
        "expiresIn": {
          "type": "string",
          "example": "24h"
        }
      }
    },
    "UserGoal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890f"
        },
        "type": {
          "type": "string",
          "example": "calories"
        },
        "target": {
          "type": "number",
          "example": 2000
        },
        "current": {
          "type": "number",
          "example": 1500
        },
        "unit": {
          "type": "string",
          "example": "kcal"
        },
        "period": {
          "type": "string",
          "example": "daily"
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "createdAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "Food": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890b"
        },
        "food_id": {
          "type": "string",
          "example": "food_12345"
        },
        "name": {
          "type": "string",
          "example": "Apple"
        },
        "description": {
          "type": "string",
          "example": "Fresh red apple"
        },
        "brand": {
          "type": "string",
          "example": "Generic"
        },
        "barcode": {
          "type": "string",
          "example": "1234567890123"
        },
        "category": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "64f7d1b2c8e5f1234567890e"
            },
            "name": {
              "type": "string",
              "example": "Fruits"
            },
            "slug": {
              "type": "string",
              "example": "fruits"
            }
          }
        },
        "nutritionPer100g": {
          "type": "object",
          "properties": {
            "calories": {
              "type": "number",
              "example": 52
            },
            "protein": {
              "type": "number",
              "example": 0.3
            },
            "carbs": {
              "type": "number",
              "example": 14
            },
            "fat": {
              "type": "number",
              "example": 0.2
            },
            "fiber": {
              "type": "number",
              "example": 2.4
            },
            "sugar": {
              "type": "number",
              "example": 10
            },
            "sodium": {
              "type": "number",
              "example": 1
            },
            "calcium": {
              "type": "number",
              "example": 6
            },
            "iron": {
              "type": "number",
              "example": 0.12
            }
          }
        },
        "allergens": {
          "type": "array",
          "example": [
            "none"
          ],
          "items": {
            "type": "string"
          }
        },
        "isVerified": {
          "type": "boolean",
          "example": true
        },
        "isPublic": {
          "type": "boolean",
          "example": true
        },
        "createdBy": {
          "type": "string",
          "example": "system"
        },
        "createdAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "FoodCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Apple"
        },
        "description": {
          "type": "string",
          "example": "Fresh red apple"
        },
        "brand": {
          "type": "string",
          "example": "Generic"
        },
        "barcode": {
          "type": "string",
          "example": "1234567890123"
        },
        "categoryId": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890e"
        },
        "nutritionPer100g": {
          "type": "object",
          "properties": {
            "calories": {
              "type": "number",
              "example": 52
            },
            "protein": {
              "type": "number",
              "example": 0.3
            },
            "carbs": {
              "type": "number",
              "example": 14
            },
            "fat": {
              "type": "number",
              "example": 0.2
            },
            "fiber": {
              "type": "number",
              "example": 2.4
            },
            "sugar": {
              "type": "number",
              "example": 10
            }
          }
        },
        "allergens": {
          "type": "array",
          "example": [
            "none"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FoodCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890e"
        },
        "name": {
          "type": "string",
          "example": "Fruits"
        },
        "slug": {
          "type": "string",
          "example": "fruits"
        },
        "description": {
          "type": "string",
          "example": "Fresh and dried fruits"
        },
        "parentId": {},
        "level": {
          "type": "number",
          "example": 0
        },
        "order": {
          "type": "number",
          "example": 1
        },
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "icon": {
          "type": "string",
          "example": "🍎"
        },
        "color": {
          "type": "string",
          "example": "#FF6B6B"
        }
      }
    },
    "Recipe": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890d"
        },
        "name": {
          "type": "string",
          "example": "Chicken Stir Fry"
        },
        "description": {
          "type": "string",
          "example": "A healthy chicken stir fry with vegetables"
        },
        "category": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "64f7d1b2c8e5f1234567890g"
            },
            "name": {
              "type": "string",
              "example": "Main Course"
            },
            "slug": {
              "type": "string",
              "example": "main-course"
            }
          }
        },
        "cuisine": {
          "type": "string",
          "example": "Asian"
        },
        "difficulty": {
          "type": "string",
          "example": "medium"
        },
        "prepTime": {
          "type": "number",
          "example": 15
        },
        "cookTime": {
          "type": "number",
          "example": 20
        },
        "totalTime": {
          "type": "number",
          "example": 35
        },
        "servings": {
          "type": "number",
          "example": 4
        },
        "isPublic": {
          "type": "boolean",
          "example": true
        },
        "authorId": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890a"
        },
        "author": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "64f7d1b2c8e5f1234567890a"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            }
          }
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "64f7d1b2c8e5f1234567890h"
              },
              "foodId": {
                "type": "string",
                "example": "64f7d1b2c8e5f1234567890b"
              },
              "food": {
                "type": "string",
                "example": "$ref:Food"
              },
              "quantity": {
                "type": "number",
                "example": 200
              },
              "unit": {
                "type": "string",
                "example": "g"
              },
              "notes": {
                "type": "string",
                "example": "diced"
              },
              "order": {
                "type": "number",
                "example": 1
              }
            }
          }
        },
        "instructions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "64f7d1b2c8e5f1234567890i"
              },
              "step": {
                "type": "number",
                "example": 1
              },
              "instruction": {
                "type": "string",
                "example": "Heat oil in a large pan over medium-high heat"
              },
              "duration": {
                "type": "number",
                "example": 2
              },
              "order": {
                "type": "number",
                "example": 1
              }
            }
          }
        },
        "nutrition": {
          "type": "object",
          "properties": {
            "perServing": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 285
                },
                "protein": {
                  "type": "number",
                  "example": 25.4
                },
                "carbs": {
                  "type": "number",
                  "example": 18.2
                },
                "fat": {
                  "type": "number",
                  "example": 12.8
                },
                "fiber": {
                  "type": "number",
                  "example": 3.2
                },
                "sugar": {
                  "type": "number",
                  "example": 8.5
                }
              }
            },
            "total": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 1140
                },
                "protein": {
                  "type": "number",
                  "example": 101.6
                },
                "carbs": {
                  "type": "number",
                  "example": 72.8
                },
                "fat": {
                  "type": "number",
                  "example": 51.2
                }
              }
            }
          }
        },
        "tags": {
          "type": "array",
          "example": [
            "healthy",
            "quick",
            "protein-rich"
          ],
          "items": {
            "type": "string"
          }
        },
        "rating": {
          "type": "object",
          "properties": {
            "average": {
              "type": "number",
              "example": 4.5
            },
            "count": {
              "type": "number",
              "example": 12
            }
          }
        },
        "createdAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "RecipeCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Chicken Stir Fry"
        },
        "description": {
          "type": "string",
          "example": "A healthy chicken stir fry"
        },
        "categoryId": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890g"
        },
        "cuisine": {
          "type": "string",
          "example": "Asian"
        },
        "difficulty": {
          "type": "string",
          "example": "medium"
        },
        "prepTime": {
          "type": "number",
          "example": 15
        },
        "cookTime": {
          "type": "number",
          "example": 20
        },
        "servings": {
          "type": "number",
          "example": 4
        },
        "isPublic": {
          "type": "boolean",
          "example": true
        },
        "ingredients": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "foodId": {
                "type": "string",
                "example": "64f7d1b2c8e5f1234567890b"
              },
              "quantity": {
                "type": "number",
                "example": 200
              },
              "unit": {
                "type": "string",
                "example": "g"
              },
              "notes": {
                "type": "string",
                "example": "diced"
              }
            }
          }
        },
        "instructions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "step": {
                "type": "number",
                "example": 1
              },
              "instruction": {
                "type": "string",
                "example": "Heat oil in a large pan"
              },
              "duration": {
                "type": "number",
                "example": 2
              }
            }
          }
        },
        "tags": {
          "type": "array",
          "example": [
            "healthy",
            "quick"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RecipeCategory": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890g"
        },
        "name": {
          "type": "string",
          "example": "Main Course"
        },
        "slug": {
          "type": "string",
          "example": "main-course"
        },
        "description": {
          "type": "string",
          "example": "Main course recipes"
        },
        "parentId": {},
        "level": {
          "type": "number",
          "example": 0
        },
        "order": {
          "type": "number",
          "example": 1
        },
        "icon": {
          "type": "string",
          "example": "🍽️"
        },
        "color": {
          "type": "string",
          "example": "#4ECDC4"
        }
      }
    },
    "ConsumptionEntry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890c"
        },
        "userId": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890a"
        },
        "itemType": {
          "type": "string",
          "example": "food"
        },
        "itemId": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890b"
        },
        "item": {
          "type": "string",
          "example": "$ref:Food"
        },
        "quantity": {
          "type": "number",
          "example": 150
        },
        "unit": {
          "type": "string",
          "example": "g"
        },
        "servings": {},
        "mealType": {
          "type": "string",
          "example": "breakfast"
        },
        "mealName": {
          "type": "string",
          "example": "Morning Snack"
        },
        "consumedAt": {
          "type": "string",
          "example": "2024-01-15T08:30:00.000Z"
        },
        "calculatedNutrition": {
          "type": "object",
          "properties": {
            "calories": {
              "type": "number",
              "example": 78
            },
            "protein": {
              "type": "number",
              "example": 0.45
            },
            "carbs": {
              "type": "number",
              "example": 21
            },
            "fat": {
              "type": "number",
              "example": 0.3
            },
            "fiber": {
              "type": "number",
              "example": 3.6
            },
            "sugar": {
              "type": "number",
              "example": 15
            }
          }
        },
        "notes": {
          "type": "string",
          "example": "Fresh and crunchy"
        },
        "tags": {
          "type": "array",
          "example": [
            "healthy",
            "fruit"
          ],
          "items": {
            "type": "string"
          }
        },
        "source": {
          "type": "string",
          "example": "manual"
        },
        "createdAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "ConsumptionEntryCreate": {
      "type": "object",
      "properties": {
        "itemType": {
          "type": "string",
          "example": "food"
        },
        "itemId": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890b"
        },
        "quantity": {
          "type": "number",
          "example": 150
        },
        "unit": {
          "type": "string",
          "example": "g"
        },
        "mealType": {
          "type": "string",
          "example": "breakfast"
        },
        "mealName": {
          "type": "string",
          "example": "Morning Snack"
        },
        "consumedAt": {
          "type": "string",
          "example": "2024-01-15T08:30:00.000Z"
        },
        "notes": {
          "type": "string",
          "example": "Fresh and crunchy"
        }
      }
    },
    "RecipeConsumptionEntry": {
      "type": "object",
      "properties": {
        "itemType": {
          "type": "string",
          "example": "recipe"
        },
        "itemId": {
          "type": "string",
          "example": "64f7d1b2c8e5f1234567890d"
        },
        "servings": {
          "type": "number",
          "example": 1.5
        },
        "mealType": {
          "type": "string",
          "example": "lunch"
        },
        "mealName": {
          "type": "string",
          "example": "Healthy Lunch"
        },
        "consumedAt": {
          "type": "string",
          "example": "2024-01-15T12:30:00.000Z"
        },
        "notes": {
          "type": "string",
          "example": "Delicious homemade meal"
        }
      }
    },
    "QuickMeal": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "itemType": {
                "type": "string",
                "example": "recipe"
              },
              "itemId": {
                "type": "string",
                "example": "64f7d1b2c8e5f1234567890d"
              },
              "servings": {
                "type": "number",
                "example": 1
              }
            }
          }
        },
        "mealType": {
          "type": "string",
          "example": "dinner"
        },
        "mealName": {
          "type": "string",
          "example": "Balanced Dinner"
        },
        "consumedAt": {
          "type": "string",
          "example": "2024-01-15T19:30:00.000Z"
        }
      }
    },
    "DashboardData": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "period": {
          "type": "string",
          "example": "today"
        },
        "summary": {
          "type": "object",
          "properties": {
            "totalCalories": {
              "type": "number",
              "example": 1847
            },
            "totalProtein": {
              "type": "number",
              "example": 85.3
            },
            "totalCarbs": {
              "type": "number",
              "example": 215.7
            },
            "totalFat": {
              "type": "number",
              "example": 62.4
            },
            "totalFiber": {
              "type": "number",
              "example": 28.5
            },
            "goalCalories": {
              "type": "number",
              "example": 2000
            },
            "caloriesRemaining": {
              "type": "number",
              "example": 153
            },
            "progressPercentage": {
              "type": "number",
              "example": 92.4
            }
          }
        },
        "breakdown": {
          "type": "object",
          "properties": {
            "breakfast": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 520
                },
                "entries": {
                  "type": "number",
                  "example": 3
                },
                "items": {
                  "type": "number",
                  "example": 2
                }
              }
            },
            "lunch": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 680
                },
                "entries": {
                  "type": "number",
                  "example": 4
                },
                "items": {
                  "type": "number",
                  "example": 3
                }
              }
            },
            "dinner": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 560
                },
                "entries": {
                  "type": "number",
                  "example": 2
                },
                "items": {
                  "type": "number",
                  "example": 1
                }
              }
            },
            "snack": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 87
                },
                "entries": {
                  "type": "number",
                  "example": 1
                },
                "items": {
                  "type": "number",
                  "example": 1
                }
              }
            }
          }
        },
        "itemTypeBreakdown": {
          "type": "object",
          "properties": {
            "foods": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 920
                },
                "percentage": {
                  "type": "number",
                  "example": 49.8
                },
                "entries": {
                  "type": "number",
                  "example": 6
                }
              }
            },
            "recipes": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 927
                },
                "percentage": {
                  "type": "number",
                  "example": 50.2
                },
                "entries": {
                  "type": "number",
                  "example": 4
                }
              }
            }
          }
        },
        "topItems": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Chicken Stir Fry"
              },
              "type": {
                "type": "string",
                "example": "recipe"
              },
              "calories": {
                "type": "number",
                "example": 285
              },
              "frequency": {
                "type": "number",
                "example": 3
              }
            }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "error": {
          "type": "string",
          "example": "Bad Request"
        },
        "message": {
          "type": "string",
          "example": "Invalid input data"
        },
        "details": {
          "type": "object",
          "properties": {
            "field": {
              "type": "string",
              "example": "email"
            },
            "reason": {
              "type": "string",
              "example": "Invalid email format"
            }
          }
        },
        "timestamp": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "message": {
          "type": "string",
          "example": "Operation completed successfully"
        },
        "timestamp": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "page": {
          "type": "number",
          "example": 1
        },
        "limit": {
          "type": "number",
          "example": 20
        },
        "total": {
          "type": "number",
          "example": 150
        },
        "pages": {
          "type": "number",
          "example": 8
        },
        "hasNext": {
          "type": "boolean",
          "example": true
        },
        "hasPrev": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "HealthCheck": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "example": "healthy"
        },
        "timestamp": {
          "type": "string",
          "example": "2024-01-15T10:30:00.000Z"
        },
        "service": {
          "type": "string",
          "example": "nounou-nutrition-api"
        },
        "version": {
          "type": "string",
          "example": "2.0.0"
        },
        "uptime": {
          "type": "number",
          "example": 3600
        },
        "environment": {
          "type": "string",
          "example": "development"
        },
        "database": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "example": "connected"
            },
            "responseTime": {
              "type": "string",
              "example": "15ms"
            }
          }
        },
        "features": {
          "type": "object",
          "properties": {
            "unifiedItemSupport": {
              "type": "boolean",
              "example": true
            },
            "foodIntegration": {
              "type": "boolean",
              "example": true
            },
            "recipeIntegration": {
              "type": "boolean",
              "example": true
            },
            "advancedAnalytics": {
              "type": "boolean",
              "example": true
            }
          }
        }
      }
    },
    "NutritionBalance": {
      "type": "object",
      "properties": {
        "period": {
          "type": "string",
          "example": "week"
        },
        "totalCalories": {
          "type": "number",
          "example": 14500
        },
        "sources": {
          "type": "object",
          "properties": {
            "foods": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 7250
                },
                "percentage": {
                  "type": "number",
                  "example": 50
                },
                "topContributors": {
                  "type": "array",
                  "example": [
                    "Apple",
                    "Banana",
                    "Chicken Breast"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "recipes": {
              "type": "object",
              "properties": {
                "calories": {
                  "type": "number",
                  "example": 7250
                },
                "percentage": {
                  "type": "number",
                  "example": 50
                },
                "topContributors": {
                  "type": "array",
                  "example": [
                    "Chicken Stir Fry",
                    "Pasta Salad"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "trends": {
          "type": "object",
          "properties": {
            "daily": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "example": "2024-01-15"
                  },
                  "foodCalories": {
                    "type": "number",
                    "example": 1000
                  },
                  "recipeCalories": {
                    "type": "number",
                    "example": 1200
                  }
                }
              }
            }
          }
        }
      }
    },
    "TopItems": {
      "type": "object",
      "properties": {
        "period": {
          "type": "string",
          "example": "month"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "64f7d1b2c8e5f1234567890d"
              },
              "name": {
                "type": "string",
                "example": "Chicken Stir Fry"
              },
              "type": {
                "type": "string",
                "example": "recipe"
              },
              "totalCalories": {
                "type": "number",
                "example": 2850
              },
              "frequency": {
                "type": "number",
                "example": 10
              },
              "avgCaloriesPerServing": {
                "type": "number",
                "example": 285
              },
              "lastConsumed": {
                "type": "string",
                "example": "2024-01-15T19:30:00.000Z"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}